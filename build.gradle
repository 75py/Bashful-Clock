// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'
    ext.dagger_version = '2.21'
    ext.spek_version = '1.2.0'
    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

        classpath 'com.google.gms:google-services:4.3.2'
        classpath 'com.deploygate:gradle:2.0.2'
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.0'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    publish_version_name = versionName()
    publish_version_code = versionCode()
}

task bumpMajor {
    doLast {
        ant.propertyfile(file: 'version.properties') {
            entry(key: 'major', type: 'int', operation: '+', value: 1)
            entry(key: 'minor', type: 'int', operation: '=', value: 0)
            entry(key: 'patch', type: 'int', operation: '=', value: 0)
            entry(key: 'id', type: 'int', operation: '+', value: 1)
        }
    }
}

task bumpMinor {
    doLast {
        ant.propertyfile(file: 'version.properties') {
            entry(key: 'minor', type: 'int', operation: '+', value: 1)
            entry(key: 'patch', type: 'int', operation: '=', value: 0)
            entry(key: 'id', type: 'int', operation: '+', value: 1)
        }
    }
}

task bumpPatch {
    doLast {
        ant.propertyfile(file: 'version.properties') {
            entry(key: 'patch', type: 'int', operation: '+', value: 1)
            entry(key: 'id', type: 'int', operation: '+', value: 1)
        }
    }
}

String versionName() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('version.properties').newDataInputStream())
    return properties['major'] + "." + properties['minor'] + "." + properties['patch']
}

int versionCode() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('version.properties').newDataInputStream())
    return Integer.parseInt(properties['id'].toString())
}
